/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as LangIndexImport } from './routes/$lang.index'
import { Route as LangLoginImport } from './routes/$lang.login'
import { Route as AuthLangInvoicesImport } from './routes/_auth.$lang.invoices'
import { Route as AuthLangDashboardImport } from './routes/_auth.$lang.dashboard'
import { Route as AuthLangInvoicesIndexImport } from './routes/_auth.$lang.invoices.index'
import { Route as AuthLangInvoicesInvoiceIdImport } from './routes/_auth.$lang.invoices.$invoiceId'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const LangIndexRoute = LangIndexImport.update({
  id: '/$lang/',
  path: '/$lang/',
  getParentRoute: () => rootRoute,
} as any)

const LangLoginRoute = LangLoginImport.update({
  id: '/$lang/login',
  path: '/$lang/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthLangInvoicesRoute = AuthLangInvoicesImport.update({
  id: '/$lang/invoices',
  path: '/$lang/invoices',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLangDashboardRoute = AuthLangDashboardImport.update({
  id: '/$lang/dashboard',
  path: '/$lang/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLangInvoicesIndexRoute = AuthLangInvoicesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthLangInvoicesRoute,
} as any)

const AuthLangInvoicesInvoiceIdRoute = AuthLangInvoicesInvoiceIdImport.update({
  id: '/$invoiceId',
  path: '/$invoiceId',
  getParentRoute: () => AuthLangInvoicesRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/$lang/login': {
      id: '/$lang/login'
      path: '/$lang/login'
      fullPath: '/$lang/login'
      preLoaderRoute: typeof LangLoginImport
      parentRoute: typeof rootRoute
    }
    '/$lang/': {
      id: '/$lang/'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/$lang/dashboard': {
      id: '/_auth/$lang/dashboard'
      path: '/$lang/dashboard'
      fullPath: '/$lang/dashboard'
      preLoaderRoute: typeof AuthLangDashboardImport
      parentRoute: typeof AuthImport
    }
    '/_auth/$lang/invoices': {
      id: '/_auth/$lang/invoices'
      path: '/$lang/invoices'
      fullPath: '/$lang/invoices'
      preLoaderRoute: typeof AuthLangInvoicesImport
      parentRoute: typeof AuthImport
    }
    '/_auth/$lang/invoices/$invoiceId': {
      id: '/_auth/$lang/invoices/$invoiceId'
      path: '/$invoiceId'
      fullPath: '/$lang/invoices/$invoiceId'
      preLoaderRoute: typeof AuthLangInvoicesInvoiceIdImport
      parentRoute: typeof AuthLangInvoicesImport
    }
    '/_auth/$lang/invoices/': {
      id: '/_auth/$lang/invoices/'
      path: '/'
      fullPath: '/$lang/invoices/'
      preLoaderRoute: typeof AuthLangInvoicesIndexImport
      parentRoute: typeof AuthLangInvoicesImport
    }
  }
}

// Create and export the route tree

interface AuthLangInvoicesRouteChildren {
  AuthLangInvoicesInvoiceIdRoute: typeof AuthLangInvoicesInvoiceIdRoute
  AuthLangInvoicesIndexRoute: typeof AuthLangInvoicesIndexRoute
}

const AuthLangInvoicesRouteChildren: AuthLangInvoicesRouteChildren = {
  AuthLangInvoicesInvoiceIdRoute: AuthLangInvoicesInvoiceIdRoute,
  AuthLangInvoicesIndexRoute: AuthLangInvoicesIndexRoute,
}

const AuthLangInvoicesRouteWithChildren =
  AuthLangInvoicesRoute._addFileChildren(AuthLangInvoicesRouteChildren)

interface AuthRouteChildren {
  AuthLangDashboardRoute: typeof AuthLangDashboardRoute
  AuthLangInvoicesRoute: typeof AuthLangInvoicesRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLangDashboardRoute: AuthLangDashboardRoute,
  AuthLangInvoicesRoute: AuthLangInvoicesRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/$lang/login': typeof LangLoginRoute
  '/$lang': typeof LangIndexRoute
  '/$lang/dashboard': typeof AuthLangDashboardRoute
  '/$lang/invoices': typeof AuthLangInvoicesRouteWithChildren
  '/$lang/invoices/$invoiceId': typeof AuthLangInvoicesInvoiceIdRoute
  '/$lang/invoices/': typeof AuthLangInvoicesIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/$lang/login': typeof LangLoginRoute
  '/$lang': typeof LangIndexRoute
  '/$lang/dashboard': typeof AuthLangDashboardRoute
  '/$lang/invoices/$invoiceId': typeof AuthLangInvoicesInvoiceIdRoute
  '/$lang/invoices': typeof AuthLangInvoicesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/$lang/login': typeof LangLoginRoute
  '/$lang/': typeof LangIndexRoute
  '/_auth/$lang/dashboard': typeof AuthLangDashboardRoute
  '/_auth/$lang/invoices': typeof AuthLangInvoicesRouteWithChildren
  '/_auth/$lang/invoices/$invoiceId': typeof AuthLangInvoicesInvoiceIdRoute
  '/_auth/$lang/invoices/': typeof AuthLangInvoicesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/$lang/login'
    | '/$lang'
    | '/$lang/dashboard'
    | '/$lang/invoices'
    | '/$lang/invoices/$invoiceId'
    | '/$lang/invoices/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/$lang/login'
    | '/$lang'
    | '/$lang/dashboard'
    | '/$lang/invoices/$invoiceId'
    | '/$lang/invoices'
  id:
    | '__root__'
    | '/_auth'
    | '/$lang/login'
    | '/$lang/'
    | '/_auth/$lang/dashboard'
    | '/_auth/$lang/invoices'
    | '/_auth/$lang/invoices/$invoiceId'
    | '/_auth/$lang/invoices/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LangLoginRoute: typeof LangLoginRoute
  LangIndexRoute: typeof LangIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LangLoginRoute: LangLoginRoute,
  LangIndexRoute: LangIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/$lang/login",
        "/$lang/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/$lang/dashboard",
        "/_auth/$lang/invoices"
      ]
    },
    "/$lang/login": {
      "filePath": "$lang.login.tsx"
    },
    "/$lang/": {
      "filePath": "$lang.index.tsx"
    },
    "/_auth/$lang/dashboard": {
      "filePath": "_auth.$lang.dashboard.tsx",
      "parent": "/_auth"
    },
    "/_auth/$lang/invoices": {
      "filePath": "_auth.$lang.invoices.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/$lang/invoices/$invoiceId",
        "/_auth/$lang/invoices/"
      ]
    },
    "/_auth/$lang/invoices/$invoiceId": {
      "filePath": "_auth.$lang.invoices.$invoiceId.tsx",
      "parent": "/_auth/$lang/invoices"
    },
    "/_auth/$lang/invoices/": {
      "filePath": "_auth.$lang.invoices.index.tsx",
      "parent": "/_auth/$lang/invoices"
    }
  }
}
ROUTE_MANIFEST_END */
